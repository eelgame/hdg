---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2019/1/10 20:09
---
---结算成功
UI_ComClearingReward=classUtlis()
function UI_ComClearingReward:ctor(panel,info)
    print("UI_ComClearingReward===========================")
    if info then
        local uiItem = CS.ItemSystem.inst:GetUIItemByID(info.itemType);
        if uiItem then
            self.icon=panel:GetChild("icon")
            self.icon.url=uiItem.Icon
            self.title=panel:GetChild("title")
            self.title.text=uiItem.name
            self.num=panel:GetChild("num")
            self.num.text=info.count
        end

    end
end
function UI_ComClearingReward:Dispose()
    self.icon=nil
    self.title=nil
    self.num=nil

end
UI_ComClearingPass=classUtlis()
function UI_ComClearingPass:ctor(panel)
 --   self.list_jiangli=panel:GetChild("list_jiangli")
   -- self.rewards={}
  --  self.list_jiangli:RemoveChildrenToPool(0,   self.list_jiangli:GetChildren().Length)
    --for i = 1, 3 do
    --    self.rewards[i]= UI_ComClearingReward.new( self.list_jiangli:AddItemFromPool())
    --end
    self.evaluate=0
    self.Clearing_pass=panel:GetController("Clearing_pass")
    self.Button_Puzzle=panel:GetChild("Button_Puzzle")
    self.Button_Puzzle.onClick:Set(function ()
        self:AddEvaluate(self.Button_Puzzle,2)
    end)
    self.Button_Fun=panel:GetChild("Button_Fun")
    self.Button_Fun.onClick:Set(function ()
        self:AddEvaluate(self.Button_Fun,4)
    end)
    self.Button_Pretty=panel:GetChild("Button_Pretty")
    self.Button_Pretty.onClick:Set(function ()
        self:AddEvaluate(self.Button_Pretty,8)
    end)

    self.Button_Creative=panel:GetChild("Button_Creative")
    self.Button_Creative.onClick:Set(function ()
        self:AddEvaluate(self.Button_Creative,16)
    end)

    self.Button_Challenging=panel:GetChild("Button_Challenging")
    self.Button_Challenging.onClick:Set(function ()
        self:AddEvaluate(self.Button_Challenging,32)
    end)

    self.Button_Cool=panel:GetChild("Button_Cool")
    self.Button_Cool.onClick:Set(function ()
        self:AddEvaluate(self.Button_Cool,64)
    end)

    self.Button_Next=panel:GetChild("Button_Next")
    self.Button_Next.onClick:Set(function ()

    end)
    self.Button_Collect=panel:GetChild("Button_Collect")
    self.Button_Collect.onClick:Set(function ()

    end)
    self.Button_Continue=panel:GetChild("Button_Continue")
    self.Button_Continue.onClick:Set(function ()
        if  self.starCount>0 or self.evaluate>0 then
            UGCModel.getInstance().model:SetLevelStarRqst( self.starCount,self.evaluate)
        end
        self.aniOut:Play(function ()
            CS.UILuaWindowBase.HideWindow("UI_UGCLevelClearing")
            CS.MatchTreeProxy.inst:ExitUGC()
        end )

    end)
    self.list_xingxing=panel:GetChild("list_xingxing")
    self.stars={}
    self.list_xingxing:RemoveChildrenToPool(0,   self.list_xingxing:GetChildren().Length)
    for i = 1, 5 do
        local starItem= self.list_xingxing:AddItemFromPool()
        starItem.name=i
        starItem.onClick:Set(function ()
            self:ShowStar(i)
        end)
        self.stars[i]=starItem:GetController("button")
    end
    self.moxing=panel:GetChild("moxing")
    self.aniOut=panel:GetTransition("out")
    self.starCount=0

end

function UI_ComClearingPass:AddEvaluate(button,value)
    if button.selected then
        self.evaluate=self.evaluate|value
    else
        self.evaluate=~value&self.evaluate
    end
end

function UI_ComClearingPass:FlushReward(rewards)
    if rewards then
        self.rewards={}
        for i, v in pairs(rewards) do
            self.rewards[i]= UI_ComClearingReward.new( self.list_jiangli:AddItemFromPool(),v)
        end
        if #rewards==0 then
            self.Clearing_pass.selectedIndex=2
            self.model=  CS.GUIHelper.CreateUIModele("UIBoxManBig",self.moxing,180)
            CS.GUIHelper.PlayModelAni(self.model,"pig",1)
            CS.GUIHelper.PlayModelAni(self.model,"Ani_State",13)
        else
            self.Clearing_pass.selectedIndex=1
        end
    end
end

function UI_ComClearingPass:Hide()
    if self.model then
        CS.UnityEngine.GameObject.Destroy(self.model)
        self.model=nil
    end

end

function UI_ComClearingPass:Dispose()
    self.Clearing_pass=nil
    self.Button_Next=nil
    self.Button_Collect=nil
    self.Button_Continue=nil
    self.list_xingxing=nil
    for i, v in pairs(self.stars) do
        self.stars[i]=nil
    end
    self.stars=nil
    self.moxing=nil
    self.model=nil
    self.aniOut=nil
    self.starCount=nil

    self.Button_Puzzle=nil
    self.Button_Fun=nil
    self.Button_Pretty=nil
    self.Button_Creative=nil
    self.Button_Cool=nil
    self.Button_Challenging=nil
end

function UI_ComClearingPass:FlushInfo()
    if    UGCModel.getInstance().model.curEditorlevel.isPlayed==1 then
        self.Clearing_pass.selectedIndex=2
    else
        self.Clearing_pass.selectedIndex=1
        UGCModel.getInstance().model.curEditorlevel.isPlayed=1
    end
    self:FlushModel()
end

function UI_ComClearingPass:FlushModel()
    self.model=  CS.GUIHelper.CreateUIModele("UIBoxManBig",self.moxing,180)
   -- CS.GUIHelper.PlayModelAni(self.model,"pig",1)
    CS.GUIHelper.PlayModelAni(self.model,"Ani_State",13)
end

function UI_ComClearingPass:ShowStar(num)
    for i = 1, 5 do
        if i<=num then
            self.stars[i].selectedIndex=1
        else
            self.stars[i].selectedIndex=0
        end
    end
    self.starCount=num
end

function UI_ComClearingPass:GetStar()
    return   self.starCount
end
---结算失败
UI_ComClearingFail=classUtlis()
function UI_ComClearingFail:ctor(panel,info)

    self.list_xingxing=panel:GetChild("list_xingxing")
    self.stars={}
    self.list_xingxing:RemoveChildrenToPool(0,   self.list_xingxing:GetChildren().Length)
    self.evaluate=0
    self.Button_Puzzle=panel:GetChild("Button_Puzzle")
    self.Button_Puzzle.onClick:Set(function ()
        self:AddEvaluate(self.Button_Puzzle,2)
    end)
    self.Button_Fun=panel:GetChild("Button_Fun")
    self.Button_Fun.onClick:Set(function ()
        self:AddEvaluate(self.Button_Fun,4)
    end)
    self.Button_Pretty=panel:GetChild("Button_Pretty")
    self.Button_Pretty.onClick:Set(function ()
        self:AddEvaluate(self.Button_Pretty,8)
    end)

    self.Button_Creative=panel:GetChild("Button_Creative")
    self.Button_Creative.onClick:Set(function ()
        self:AddEvaluate(self.Button_Creative,16)
    end)

    self.Button_Challenging=panel:GetChild("Button_Challenging")
    self.Button_Challenging.onClick:Set(function ()
        self:AddEvaluate(self.Button_Challenging,32)
    end)

    self.Button_Cool=panel:GetChild("Button_Cool")
    self.Button_Cool.onClick:Set(function ()
        self:AddEvaluate(self.Button_Cool,64)
    end)
    for i = 1, 5 do
        local starItem= self.list_xingxing:AddItemFromPool()
        starItem.name=i
        starItem.onClick:Set(function ()
            self:ShowStar(i)
        end)
        self.stars[i]=starItem:GetController("button")
    end
    self.Button_Return=panel:GetChild("Button_Return")
    self.Button_Return.onClick:Set(function ()
        self:QuitGame()
    end)
    self.Button_Retry=panel:GetChild("Button_Retry")
    self.Button_Retry.onClick:Set(function ()
        local m_maxTime = CS.MatchTreeProxy.inst:GetTicketMaxTime()
        if m_maxTime>0 or CS.MyPlayerInfo.Instance.TicketCount>0  then
            self:TryGame()
        else
            CS.MatchTreeProxy.inst:SetShowNomorePower(true);
            self:QuitGame()
        end

    end)

    self.moxing=panel:GetChild("moxing")
    -----点击背景退出
    --self.Button_end=panel:GetChild("Button_end")
    --self.Button_end.onClick:Set(function ()
    --    self:QuitGame()
    --end)
    self.aniOut=panel:GetTransition("out")
    self.starCount=0
end
function UI_ComClearingFail:AddEvaluate(button,value)
    if button.selected then
        self.evaluate=self.evaluate|value
    else
        self.evaluate=~value&self.evaluate
    end
end
function UI_ComClearingFail:FlushModel()
    self.model=  CS.GUIHelper.CreateUIModele("UIBoxManBig",self.moxing,180)
   -- CS.GUIHelper.PlayModelAni(self.model,"pig",1)
    CS.GUIHelper.PlayModelAni(self.model,"Ani_State",14)
end

function UI_ComClearingFail:TryGame()
    if  self.starCount>0 or self.evaluate>0 then
        UGCModel.getInstance().model:SetLevelStarRqst( self.starCount,self.evaluate)
    end
    self.aniOut:Play(function ()
        CS.UILuaWindowBase.HideWindow("UI_UGCLevelClearing")
        CS.UIWindowViewManager.ShowWindowByLua("UI_LevelInfoState")
    end )
end

function UI_ComClearingFail:QuitGame()
    if  self.starCount>0 or self.evaluate>0 then
        UGCModel.getInstance().model:SetLevelStarRqst( self.starCount,self.evaluate)
    end
    self.aniOut:Play(function ()
        CS.UILuaWindowBase.HideWindow("UI_UGCLevelClearing")
        CS.MatchTreeProxy.inst:ExitUGC()
    end )

end

--function UI_ComClearingFail:TryAgainGame()
--    UGCModel.getInstance().model:UGCLevelPlayEndFailRqst(self.starCount)
--    CS.LevelProfile.SetCurLevelProfile( UGCModel.getInstance().model.curEditorlevel.jsonLevelProfile,'path:',true)
--    CS.UILuaWindowBase.HideWindow("UIUGCLevelClearing")
--end

function UI_ComClearingFail:ShowStar(num)
    for i = 1, 5 do
        if i<=num then
            self.stars[i].selectedIndex=1
        else
            self.stars[i].selectedIndex=0
        end
    end
    self.starCount=num
end

function UI_ComClearingFail:GetStar()
    return   self.starCount
end

function UI_ComClearingFail:Hide()
end

function UI_ComClearingFail:Dispose()
    self.list_xingxing=nil
    for i, v in pairs(self.stars) do
        self.stars[i]=nil
    end
    self.stars=nil
    self.Button_Return=nil
    self.Button_Retry=nil
    self.moxing=nil
    self.aniOut=nil
    self.starCount=nil
    self.Button_Puzzle=nil
    self.Button_Fun=nil
    self.Button_Pretty=nil
    self.Button_Creative=nil
    self.Button_Cool=nil
    self.Button_Challenging=nil
end

require("UIPanel.Ugc.UI_UgcClearing_cold_4")
UI_UGCLevelClearing = {}
UI_UGCLevelClearing.__index = UIUGCLevelClearing
UI_UGCLevelClearing.panelName = "UI_UGCLevelClearing"
UI_UGCLevelClearing.packageName = "Clearing"
UI_UGCLevelClearing.componentName = "UIUGCLevelClearing"
UI_UGCLevelClearing.UIComID =34
UI_UGCLevelClearing.className = 'UI_UGCLevelClearing'
require("UIPanel.Ugc.UI_UGCLT")
function UI_UGCLevelClearing.New(UIShowFunc)
    --这里等把usedata解析出来之后在来判断
    if type(UIShowFunc) == "userdata" then
        UI_UGCLevelClearing.UIShowFunc = UIShowFunc
    end
    print("UI_UGCLevelClearing new")
    UI_UGCLevelClearing.UIShowFunc = UIShowFunc
    BasePanelObject.New(UI_UGCLevelClearing)
    if UI_UGCLevelClearing.contentPane ~= nil then
        UI_UGCLevelClearing.UGCLT=  UI_UGCLT.new(UI_UGCLevelClearing.contentPane:GetChild("UGCLT"))
        UI_UGCLevelClearing.Clearing_pass=UI_ComClearingPass.new(UI_UGCLevelClearing.contentPane:GetChild("Clearing_pass"))
        UI_UGCLevelClearing.Clearing_fail=UI_ComClearingFail.new(UI_UGCLevelClearing.contentPane:GetChild("Clearing_fail"))
        UI_UGCLevelClearing.UGCClearingCtrl=UI_UGCLevelClearing.contentPane:GetController("UGCClearing")
        UI_UGCLevelClearing.Clearing_ShareBtn = UI_UGCLevelClearing.contentPane:GetChild("Button_Share")
        UI_UGCLevelClearing:Inituiinfo()
    end
    UI_UGCLevelClearing:OpenPanel()
end



------初始化UI
function UI_UGCLevelClearing:Inituiinfo()
    UI_UGCLevelClearing.UGCClearingCtrl.selectedIndex=0
    if UGCModel.getInstance().model:GetGameResult() then
        UI_UGCLevelClearing.UGCClearingCtrl.selectedIndex=1
        UI_UGCLevelClearing.Clearing_pass:FlushInfo()
   --     UGCModel.getInstance().model:UGCLevelPlayEndFinishRqst()
    else
        UI_UGCLevelClearing.UGCClearingCtrl.selectedIndex=2
        UI_UGCLevelClearing.Clearing_fail:FlushModel()
     --   UGCModel.getInstance().model:UGCLevelPlayEndFailRqst()
    end
    UI_UGCLevelClearing:RefreshUGCLT()
    UI_UGCLevelClearing.Clearing_ShareBtn.onClick:Add(function()
        if CS.UnityEngine.Application.platform == CS.UnityEngine.RuntimePlatform.Android then
            CS.SDKManager.inst.jo:Call("ScreenCapture");
        end
        if CS.UnityEngine.Application.platform == CS.UnityEngine.RuntimePlatform.IPhonePlayer then
            CS.SDKIOS.txQKScreenCapture();
        end
    end)
end

function UI_UGCLevelClearing.OnGCUgcLevelPlayEndRspd(...)
    local rspd = MsgType.GCUgcLevelPlayEndRspd:New(...)
    if UGCModel.getInstance().model:GetGameResult() then
        UI_UGCLevelClearing.Clearing_pass:FlushReward(rspd.rewards)
    else
        UI_UGCLevelClearing.Clearing_fail:FlushModel()
    end
end

function UI_UGCLevelClearing:RefreshUGCLT()
    UI_UGCLevelClearing.UGCLT:RefreshPowerInfo()
    UI_UGCLevelClearing.UGCLT:InitResInfo()
    UI_UGCLevelClearing.UGCLT:SetUGCLTBtnState(1)
    --print("update UI")
end

function UI_UGCLevelClearing:OpenPanel()
    self:OpenPanelBase()
end

function UI_UGCLevelClearing:ClosePanel()
    self:ClosePanelBase()
end

function UI_UGCLevelClearing.OnSendCheckData(data)

end

function UI_UGCLevelClearing.AddListeners()
    -- CS.EventCtrl.inst:LuaAddEventListener("EVENT_REFRESH_REDHINT",nil ,UI_MainCity.RefreshRedHint);
   -- Event.AddListener(tostring(MsgType.GCUgcLevelPlayEndRspd.GetCmd()) , UI_UGCLevelClearing.OnGCUgcLevelPlayEndRspd)
    --CS.EventCtrl.inst:LuaAddEventListener("EVENT_MATCHTREE_SENDCHECKDATA","string" ,UI_UGCLevelClearing.OnSendCheckData)
end

function UI_UGCLevelClearing.RemoveListeners()
    --  CS.EventCtrl.inst:LuaRemoveEventListener("EVENT_REFRESH_REDHINT",nil , UI_MainCity.RefreshRedHint);
    --CS.EventCtrl.inst:LuaRemoveEventListener("EVENT_MATCHTREE_SENDCHECKDATA","string" , UI_UGCLevelClearing.OnSendCheckData)
  --  Event.RemoveListener(tostring(MsgType.GCUgcLevelPlayEndRspd.GetCmd()) , UI_UGCLevelClearing.OnGCUgcLevelPlayEndRspd)
end

function UI_UGCLevelClearing.OnShown()

end

function UI_UGCLevelClearing.OnHide()
    if  UI_UGCLevelClearing.UGCClearingCtrl.selectedIndex==1 then
        UI_UGCLevelClearing.Clearing_pass:Hide()
    else
        UI_UGCLevelClearing.Clearing_fail:Hide()
    end
    UI_UGCLevelClearing.Dispose()
end


function UI_UGCLevelClearing.Dispose()
    UI_UGCLevelClearing.UGCLT:Dispose()
    UI_UGCLevelClearing.UGCLT=  nil
    if  UI_UGCLevelClearing.Clearing_pass then
        UI_UGCLevelClearing.Clearing_pass:Dispose()
    end
    UI_UGCLevelClearing.Clearing_pass=nil
    if  UI_UGCLevelClearing.Clearing_fail then
        UI_UGCLevelClearing.Clearing_fail:Dispose()
    end
    UI_UGCLevelClearing.Clearing_fail=nil
    UI_UGCLevelClearing.UGCClearingCtrl=nil
    UI_UGCLevelClearing.Clearing_ShareBtn = nil
end