---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2018/11/22 20:11
---
require("UIPanel.Ugc.UI_UgcButtonItem")
require("UIPanel.Ugc.UI_UgcButtonTarget2")
UI_UgcDetails=classUtlis()
function UI_UgcDetails:ctor(item, callbackSelect, callbackMakeSure, callbackCancel)
    self.item=item
    self.callback= callbackSelect
    self.list_details=self.item:GetChild("list_details")
    self.Button_cancel=self.item:GetChild("Button_cancel")
    self.Button_cancel.onClick:Set(function ()
        callbackCancel(self.curSelectItem)
    end )
    self.Button_Ok=self.item:GetChild("Button_Ok")
    self.Button_Ok.onClick:Set(function ()
        callbackMakeSure(self,self.index, self.cfg)
    end )
    self.itemComs={}
    self.direction=self.item:GetController("direction")
end

function UI_UgcDetails:Dispose()
    self.item=nil
    self.callback= nil
    self.list_details=nil
    self.Button_cancel=nil
    self.Button_Ok=nil
    if self.itemComs then
        for i, v in pairs(self.itemComs) do
            v:Dispose()
        end
    end
    self.itemComs=nil
    self.direction=nil
    self.curSelectItem=nil
end

function  UI_UgcDetails:InitTargetList(cfg)
    self.itemComs={}
    self.list_details:RemoveChildrenToPool(0,   self.list_details:GetChildren().Length)
    local mainLevelId=CS.MatchTreeProxy.inst:GetMainLevelID()
    for i, v in pairs( cfg) do
        local targetItem=   UGCItemConfigManager.getInstance().GetItemByName(v.type)
        if targetItem and targetItem.unLockID<mainLevelId then
            table.insert( self.itemComs,UI_UgcButtonTarget2.new(self.list_details:AddItemFromPool(),v, function (a)
                self:SelectItem(a)
            end))
        elseif targetItem==nil then
            table.insert( self.itemComs,UI_UgcButtonTarget2.new(self.list_details:AddItemFromPool(),v, function (a)
                self:SelectItem(a)
            end))
        end

    end
end

function  UI_UgcDetails:ShowTargetList(index , except, subType)
    self.list_details:RemoveChildrenToPool(0,   self.list_details:GetChildren().Length)
    for i, v in pairs(self.itemComs) do
        if v.cfg.type~=except or v.cfg.subType~=subType then
            self.list_details:AddChild(v.item)
        end
    end
    self.index=index
    self.cfg= UGCItemConfigManager.getInstance().GetTarget(UGCModel.getInstance().model:GetTarget(index))
end

function  UI_UgcDetails:InitItemList(cfg)
    self.itemComs={}
    self.list_details:RemoveChildrenToPool(0,   self.list_details:GetChildren().Length)
    for i, v in pairs( cfg) do
        table.insert( self.itemComs,UI_UgcButtonItem.new(self.list_details:AddItemFromPool(),v, function (a)
            self:SelectItem(a)
        end))
    end
end

function  UI_UgcDetails:AddItemToList(itemCfg)
    table.insert( self.itemComs,UI_UgcButtonItem.new(self.list_details:AddItemFromPool(),itemCfg, function (a)
        self:SelectItem(a)
    end))
end

function  UI_UgcDetails:DeleteItemFromList(item)
    for i, v in pairs(self.itemComs) do
        if v==item then
            table.remove(self.itemComs,i)
            self.list_details:RemoveChildrenToPool(i-1,i)
            break
        end
    end
end

function  UI_UgcDetails:ChangeItemToList(itemCfg,index)
    self.itemComs[index]:SetItem(itemCfg)
    self.cfg=itemCfg
end

function  UI_UgcDetails:SelectItem(item)
    self.curSelectItem=item
    self.cfg=item.cfg
    self.callback(self,item)
end

function UI_UgcDetails:ShowWithPosition(coord,dir)
    self.item.x=coord.x;
    self.item.y=coord.y;
    self.direction.selectedIndex=dir
end