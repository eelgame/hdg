---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2019/1/7 17:25
---
require("UIPanel.Ugc.UI_UgcComBuilderLevel")
UI_UgcComBuilderLeverCard=classUtlis()
function UI_UgcComBuilderLeverCard:ctor(panel,selectCallBack)
    self.panel=panel
    self.TitleLevelName=panel:GetChild("TitleLevelName")
    self.list_xingji=panel:GetChild("list_xingji")
    self.TitleTokenNum=panel:GetChild("TitleTokenNum")
    panel.onClick:Set(function ()
            selectCallBack(self)
    end )
    self.LevelType=panel:GetController("LevelType")
    self.button=panel:GetController("button11")

end

function UI_UgcComBuilderLeverCard:FlushInfo(cardCfg,index)
    self.cardCfg= cardCfg
    if cardCfg then
        self.levelDetail= cardCfg.levelProfile
        self.index=index
        self.LevelType.selectedIndex=0
        if cardCfg.type=="order" then
            self.LevelType.selectedIndex=0
        elseif cardCfg.type=="save" then
            self.LevelType.selectedIndex=1
        end
        if  self.levelDetail then
            self.levelProfile=  self.levelDetail.levelProfile
            self.TitleLevelName.text=   self.levelDetail.templateName
            self.TitleTokenNum.text=self.levelDetail.playCount
            self.list_xingji:RemoveChildrenToPool(0,  self.list_xingji:GetChildren().Length)
            for i = 1, self.levelDetail.starCount do
                self.list_xingji:AddItemFromPool()
            end
        end

    else
        self.LevelType.selectedIndex=2
    end

end


function UI_UgcComBuilderLeverCard:SetBtnState(index)
    if self.cardCfg then
        self.button.selectedIndex=index
    else
        self.button.selectedIndex=0
    end
end

function UI_UgcComBuilderLeverCard:SetLevelName(name)
    self.TitleLevelName.text= name
end

function UI_UgcComBuilderLeverCard:GetLevelProfile()
    return self.levelProfile
end

function UI_UgcComBuilderLeverCard:Dispose()
    self.panel=nil
    self.TitleLevelName=nil
    self.list_xingji=nil
    self.TitleTokenNum=nil
    self.LevelType=nil
    self.button=nil
    self.cardCfg=nil
    self.levelDetail=nil
    self.levelProfile=nil
    self.index=nil
end

UI_UGCLevelBuilder=classUtlis()
function UI_UGCLevelBuilder:ctor(panel,Button_NewLevel)
    self.boardList=panel:GetChild("list_level")
    self.boardList:RemoveChildrenToPool(0,  self.boardList:GetChildren().Length)
    self.board= UI_UgcComBuilderLevel.new( self.boardList:AddItemFromPool())
    self.ListBuilderLevel=panel:GetChild("ListBuilderLevel")
    self.ListBuilderLevel:SetVirtual()
    self.ComListBuilderLevel={}
    self.ComListBuilderLevelDatas={}
    self.ListBuilderLevel.itemRenderer= function (index,obj)
        self.itemIndex=  self.ListBuilderLevel:GetChildIndex(obj)
        if  self.ComListBuilderLevel[ obj]==nil then
            self.ComListBuilderLevel[ obj]= UI_UgcComBuilderLeverCard.new(obj,function (item)
                self:SelectCard(item)
            end)
        end
        if   self.ComListBuilderLevelDatas[obj]~=index+1 then
            if self.selectTab==2 then
                self.ComListBuilderLevel[obj]:FlushInfo( UGCModel.getInstance().model:GetOrderCard(index+1),index+1)
            elseif self.selectTab==1 then
                self.ComListBuilderLevel[obj]:FlushInfo( UGCModel.getInstance().model:GetSaveCard(index+1),index+1)
            elseif self.selectTab==3 then
                self.ComListBuilderLevel[obj]:FlushInfo( UGCModel.getInstance().model:GetHistoryCard(index+1),index+1)
            end
            if self.curSelectIndex==index+1 then
                self.ComListBuilderLevel[obj]:SetBtnState(1)
            else
                self.ComListBuilderLevel[obj]:SetBtnState(0)
            end
        end
        self.ComListBuilderLevelDatas[obj]=index+1
    end

    ---已上架
    self.ButtonYeqianOpen=panel:GetChild("ButtonYeqianOpen")
    self.ButtonYeqianOpen.onClick:Set(function ()
        self.curSelectIndex =1
        self.selectTab=2
        self:FlushOrder(true)
        self.ButtonYeqianSave.selected=false
        self.ButtonYeqianHistory.selected=false

    end )
    ---历史记录
    self.ButtonYeqianHistory=panel:GetChild("ButtonYeqianHistory")
    self.ButtonYeqianHistory.onClick:Set(function ()
        self.curSelectIndex =1
        self.selectTab=3
        self:FlushHistory(true)
        self.ButtonYeqianSave.selected=false
        self.ButtonYeqianOpen.selected=false

    end )

    -----本地保存
    self.ButtonYeqianSave=panel:GetChild("ButtonYeqianSave")
    self.ButtonYeqianSave.onClick:Set(function ()
        self.curSelectIndex =1
        self.selectTab=1
        self.LevelDetailsCtrl.selectedIndex=0
        self:FlushSave(true)
        self.ButtonYeqianOpen.selected=false
        self.ButtonYeqianHistory.selected=false
    end )
    self.selectTab=1
    self.ButtonYeqianOpen.selected=false
    self.ButtonYeqianHistory.selected=false
    self.ButtonYeqianSave.selected=true
    ---改名
    self.ChangeLevelNameButton=panel:GetChild("ChangeLevelNameButton")
    self.ChangeLevelNameButton.onClick:Set(function ()
        CS.UI_ReName.reNameTarget=2
        local win=   CS.UIWindowViewManager.ShowWindowByLua("UI_ReName")
        if win then
            win:SetInitName(self.levelInfo.templateName)
        end
    end)
    ---开始
    self.button_start=panel:GetChild("button_Test")
    self.button_start.onClick:Set(function ()
        if self.curSelectItem then
            if self.selectTab==2 then
                UGCModel:getInstance().model:InitUGCProfileAndEnter(self.curSelectItem.levelDetail,false,true,false)
            end
        end
    end)
    ---新建
    self.Button_NewLevel=Button_NewLevel
    self.Button_NewLevel.onClick:Set(function ()
        CS.UILuaWindowBase.ShowWindow("UI_UgcTemplate")
    end)
    ---删除
    self.button_delete=panel:GetChild("button_delete")
    self.button_delete.onClick:Set(function ()
        if self.curSelectItem then
                CS.GameMsgHint.inst:ShowOpenOKCancelMsgBox( sstring.Format(CS.GUIHelper.ParseStringTable(3213)),function ()
                    UGCModel.getInstance().model:DeleteSaveLevel(self.curSelectItem.levelDetail.levelID) end,function() end)
        end
    end)
    -----编辑
    self.button_Edit=panel:GetChild("button_Edit")
    self.button_Edit.onClick:Set(function ()
        if self.curSelectItem then
            UGCModel:getInstance().model:InitUGCProfileAndEnter(self.curSelectItem.levelDetail,true,false,self.BuilderType.selectedIndex~=0)
        end

    end)
    self.button_Copy=panel:GetChild("button_Copy")
    self.button_Copy.onClick:Set(function ()
        if self.curSelectItem then
            UGCModel:getInstance().model:InitUGCProfileAndEnter(self.curSelectItem.levelDetail,true,false,self.BuilderType.selectedIndex~=0)
        end

    end)
    -----上传
    self.button_Launch=panel:GetChild("button_Launch")
    self.button_Launch.onClick:Set(function ()
        if self.curSelectItem then
            if self.curSelectItem.levelDetail.isPassed==1 then
                if UGCModel.getInstance().model:CheckEnergyCount() then
                    CS.GameMsgHint.inst:ShowPopupOKCancelMsgBox( CS.GUIHelper.ParseStringTable(3230,tostring( UGCModel.getInstance().model:GetEnergyCost())),
                            function ()
                                UGCModel.getInstance().model:UploadCurUGCEditorLevelRqst(self.curSelectItem.levelDetail.levelID)
                            end)
                else
                    CS.GameMsgHint.inst:ShowPopupOKCancelMsgBox(CS.GUIHelper.ParseStringTable(3231),
                            function ()
                                CS.UIWindowViewManager.ShowWindowByLua("UI_ItemShop")
                            end)
                end
            else
                CS.GameMsgHint.inst:ShowOKMsgBox(CS.GUIHelper.ParseStringTable(3229))
            end
        end

    end)
    self.button_Close=panel:GetChild("button_Close")
    self.button_Close.onClick:Set(function ()
        CS.GameMsgHint.inst:ShowPopupOKCancelMsgBox( CS.GUIHelper.ParseStringTable(3232),
                function ()
                    UGCModel.getInstance().model:DownOrderLevel(self.curSelectItem.levelDetail.levelID)
                end)
    end)
    self.BuilderType=panel:GetController("BuilderType")
    self.LevelDetailsCtrl=panel:GetController("LevelDetails")
    self.button_chakan=panel:GetChild("button_chakan")
    self.button_chakan.onClick:Set(function ()
        if  self.LevelDetailsCtrl.selectedIndex==0 then
            self.LevelDetails:SetInfo(  self.curSelectItem.levelDetail)
            self.LevelDetailsCtrl.selectedIndex=1
        else
            self.LevelDetailsCtrl.selectedIndex=0
        end
        end)
    self.TitleLevelName=  panel:GetChild("TitleLevelName")
    self.TitleLevelName.text=""
    self.TitleLevelID=  panel:GetChild("TitleLevelID")
    self.TitleLevelID.text=""
    self.LevelDetails=UI_UgcComLevelDetails.new(panel:GetChild("LevelDetails"))
    self.ComLevelNews=panel:GetChild("ComLevelNews")
    self.ListOrder=  self.ComLevelNews:GetChild("ListOrder")
    self.TitleMoves=  self.ComLevelNews:GetChild("TitleMoves")
    self.TitleMoves.text="0"
    self.TargetModelCtrl= self.ComLevelNews:GetController("Targer")
    self.ListOrder:RemoveChildrenToPool(0,  self.ListOrder:GetChildren().Length)
end

function UI_UGCLevelBuilder:Dispose()
    self.boardList.itemPool:Clear()
    self.boardList:Dispose()
    self.boardList=nil
    self.ListBuilderLevel=nil
    for i, v in pairs(self.ComListBuilderLevel) do
        if v then
            v:Dispose()
            self.ComListBuilderLevel[i]=nil
        end
    end
    self.ComListBuilderLevel=nil
    for i, v in pairs(self.ComListBuilderLevelDatas) do
        self.ComListBuilderLevelDatas[i]=nil
    end
    self.ComListBuilderLevelDatas=nil
    self.board:Dispose()
    self.board=nil
    self.ButtonYeqianOpen=nil
    self.ButtonYeqianSave=nil
    self.ButtonYeqianHistory=nil
    self.selectTab=nil
    self.button_start=nil
    self.Button_NewLevel=nil
    self.button_delete=nil
    self.button_Edit=nil
    self.button_Copy=nil
    self.button_Close=nil
    self.button_Launch=nil
    self.BuilderType=nil
    self.LevelDetailsCtrl=nil
    self.button_chakan=nil
    self.TitleLevelName=nil
    self.TitleLevelID=nil
    self.buyFactoryHandler=nil
    self.flushUIHandler=nil
    self.refreshName=nil
    self.onGCUgcLevelOptRspdRspd=nil
    self.LevelDetails:Dispose()
    self.LevelDetails=nil
    self.ComLevelNews=nil
    self.ListOrder=nil
    self.TitleMoves=nil
    self.TargetModelCtrl=nil
    if self.orders then
        for i, v in pairs(self.orders) do
            if v then
                v:Dispose()
                self.orders[i]=nil
            end
        end
        self.orders=nil
    end
    self.curSelectItem=nil
    self.curSelectIndex=nil
    self.ChangeLevelNameButton=nil
    self.levelInfo=nil
    self.reName=nil
end

function UI_UGCLevelBuilder:FlushLevelDatas()
    for i, v in pairs(self.ComListBuilderLevelDatas) do
        self.ComListBuilderLevelDatas[i]=nil
    end
end

function UI_UGCLevelBuilder:FlushLevels(levelCount,isFlushSelect)
    self:FlushLevelDatas()
    self.ListBuilderLevel.numItems=math.max(levelCount,5)
    if isFlushSelect then
        if self.curSelectIndex<= levelCount then
            self:SelectCard( self.ComListBuilderLevel[self.ListBuilderLevel:GetChildAt(0)])
        else
            self.BuilderType.selectedIndex=2
        end
    end
end

function UI_UGCLevelBuilder:FlushHistory(isFlushSelect)
    self.BuilderType.selectedIndex=3
    self:FlushLevels(UGCModel.getInstance().model:GetHistoryLevelsCount(),isFlushSelect)
end

function UI_UGCLevelBuilder:FlushSave(isFlushSelect)
    self.BuilderType.selectedIndex=0
    self:FlushLevels(UGCModel.getInstance().model:GetSaveLevelsCount(),isFlushSelect)
end

function UI_UGCLevelBuilder:FlushOrder(isFlushSelect)
    self.BuilderType.selectedIndex=1
    self:FlushLevels(UGCModel.getInstance().model:GetOrderLevelsCount(),isFlushSelect)
end

function UI_UGCLevelBuilder:ClearBoard()
    self.board:ClearBoard()
end

function UI_UGCLevelBuilder:SelectCard(item)
    if item.cardCfg then
        for i, v in pairs(self.ComListBuilderLevel) do
            if v then
                v:SetBtnState(0)
            end
        end
        item:SetBtnState(1)
        if item.cardCfg.flag==nil then
            self:SetLevelInfo(item.levelDetail)
        end
        self.curSelectItem=item
        self.curSelectIndex=item.index
    end
end

function UI_UGCLevelBuilder:SetLevelInfo(levelInfo)
    self.board:SetLevelInfo(levelInfo)
    self.orders={}
    self.levelInfo=levelInfo
    self.ListOrder:RemoveChildrenToPool(0,  self.ListOrder:GetChildren().Length)
    for i = 1, levelInfo.levelProfile.targetCount do
        if levelInfo.levelProfile.targets[i]~="None" then
            local target=UGCItemConfigManager.getInstance().GetTarget(levelInfo.levelProfile.targets[i],levelInfo.levelProfile.colorIds[i])
            self.orders[i]= UI_UgcClearing_cold_4.new( self.ListOrder:AddItemFromPool(),target.icon,levelInfo.levelProfile.targetCountTotal[i])
        end
    end
    self.TargetModelCtrl.selectedIndex= levelInfo.levelProfile.targetCount-1
    self.TitleLevelName.text=levelInfo.templateName
    self.TitleLevelID.text=levelInfo.levelID
    self.TitleMoves.text=levelInfo.levelProfile.limit
    if  self.LevelDetailsCtrl.selectedIndex==1 then
        self.LevelDetails:SetInfo( levelInfo)
    end
end


function UI_UGCLevelBuilder:Init()
    self.curSelectIndex =1
    self:FlushUI(true)
end

function UI_UGCLevelBuilder:FlushUI(isFlushSelect)
    if   self.selectTab==2 then
        self:FlushOrder(isFlushSelect)
    elseif   self.selectTab==1 then
        self:FlushSave(isFlushSelect)
    elseif   self.selectTab==3 then
        self:FlushHistory(isFlushSelect)
    end

end

function UI_UGCLevelBuilder:AddListeners()
    self:InitHandler()
    Event.AddListener(LuaGameEventType.EVENT_BUY_FACTORY, self.buyFactoryHandler )
    Event.AddListener(LuaGameEventType.HANDLER_FLUSH_BUILDERUI, self.flushUIHandler )
    Event.AddListener(tostring(MsgType.GCUgcLevelOptRspd.GetCmd()) ,  self.onGCUgcLevelOptRspdRspd)
    CS.EventCtrl.inst:LuaAddEventListener("HANDLE_MATCHTREE_RENAME_UGCLEVEL","string" ,self.refreshName)
end

function UI_UGCLevelBuilder:RemoveListeners()
    Event.RemoveListener(LuaGameEventType.EVENT_BUY_FACTORY,  self.buyFactoryHandler)
    Event.RemoveListener(LuaGameEventType.HANDLER_FLUSH_BUILDERUI, self.flushUIHandler )
    Event.RemoveListener(tostring(MsgType.GCUgcLevelOptRspd.GetCmd()) ,   self.onGCUgcLevelOptRspdRspd)
    CS.EventCtrl.inst:LuaRemoveEventListener("HANDLE_MATCHTREE_RENAME_UGCLEVEL","string" , self.refreshName)
end

function UI_UGCLevelBuilder:OnGCUgcLevelOptRspdRspd(...)
    local rspd = MsgType.GCUgcLevelOptRspd:New(...)
    if rspd.optType==MsgType.EUgcLevelOptType.EUgcLevelOptType_Rename then
        if rspd.errorCode==MsgType.EUgcLevelErrorCode.EUgcLevelErrorCode_Success then
            self.TitleLevelName.text=self.reName
            self.levelInfo.templateName=self.reName
            if self.curSelectItem then
                self.curSelectItem:SetLevelName(self.reName)
            end
            CS.GameMsgHint.inst:ShowSmallTips(sstring.Format(CS.GUIHelper.ParseStringTable(3233)))
        end
    end
end

function UI_UGCLevelBuilder:RefreshName(levelName)
    self.reName=levelName
    UGCModel.getInstance().model:RenameUGCLevelRqst(self.levelInfo.levelID,levelName)
end

function UI_UGCLevelBuilder:InitHandler()
    self.buyFactoryHandler=function()
        self:FlushOrder()
    end
    self.flushUIHandler=function()
        self:FlushUI( self.curSelectIndex==1)
    end
    self.refreshName=function(name)
        self:RefreshName(name)
    end
    self.onGCUgcLevelOptRspdRspd=function(...)
        self:OnGCUgcLevelOptRspdRspd(...)
    end
end


